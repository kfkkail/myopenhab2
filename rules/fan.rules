var Timer timerMasterBathToilet
var Timer timerMasterBathShower
var Timer timerHallwayBath
var Timer timerMainFloorBath

rule "Turn on fan, but only let it run for 15 minutes"
when
  Item MasterBathFanSwitch changed
then
  if(MasterBathFanSwitch.state == ON) {
    if(timerMasterBathShower !== null) {
      logDebug("rules", "Master Bath Shower Fan Turned On - Cancel Previous Timer")
      timerMasterBathShower.cancel
    }

    logDebug("rules", "Master Bath Shower Fan Turned On - Start Timer")
    timerMasterBathShower = createTimer(now.plusMinutes(15)) [|
      logDebug("rules", "Master Bath Shower Fan Timer Expired - Turn Off")
      sendCommand(MasterBathFanSwitch, OFF)
      timerMasterBathShower.cancel
    ]
  } else {
    if(timerMasterBathShower !== null) {
      logDebug("rules","Master Bath Shower Fan Turned Off - Cancel Timer")
      timerMasterBathShower.cancel
    }
  }
end

rule "Turn on fan, but only let it run for 15 minutes"
when
  Item MasterBathToiletFanSwitch changed
then
  if(MasterBathToiletFanSwitch.state == ON) {
    if(timerMasterBathToilet !== null) {
      logDebug("rules", "Master Bath Toilet Fan Turned On - Cancel Previous Timer")
      timerMasterBathToilet.cancel
    }

    logDebug("rules", "Master Bath Toilet Fan Turned On - Start Timer")
    timerMasterBathToilet = createTimer(now.plusMinutes(15)) [|
      logDebug("rules", "Master Bath Toilet Fan Timer Expired - Turn Off")
      sendCommand(MasterBathToiletFanSwitch, OFF)
      timerMasterBathToilet.cancel
    ]
  } else {
    if(timerMasterBathToilet !== null) {
      logDebug("rules","Master Bath Toilet Fan Turned Off - Cancel Timer")
      timerMasterBathToilet.cancel
    }
  }
end

rule "Turn on fan, but only let it run for 15 minutes"
when
  Item HallwayBathFanSwitch changed
then
  if(HallwayBathFanSwitch.state == ON) {
    if(timerHallwayBath !== null) {
      logDebug("rules", "Hallway Bath Fan Turned On - Cancel Previous Timer")
      timerHallwayBath.cancel
    }

    logDebug("rules", "Hallway Bath Fan Turned On - Start Timer")
    timerHallwayBath = createTimer(now.plusMinutes(15)) [|
      logDebug("rules", "Hallway Bath Fan Timer Expired - Turn Off")
      sendCommand(HallwayBathFanSwitch, OFF)
      timerHallwayBath.cancel
    ]
  } else {
    if(timerHallwayBath !== null) {
      logDebug("rules","Hallway Bath Fan Turned Off - Cancel Timer")
      timerHallwayBath.cancel
    }
  }
end

rule "Turn on fan, but only let it run for 15 minutes"
when
  Item MainFloorBathFanSwitch changed
then
  if(MainFloorBathFanSwitch.state == ON) {
    if(timerMainFloorBath !== null) {
      logDebug("rules", "Main Floor Bath Fan Turned On - Cancel Previous Timer")
      timerMainFloorBath.cancel
    }

    logDebug("rules", "Main Floor Bath Fan Turned On - Start Timer")
    timerMainFloorBath = createTimer(now.plusMinutes(15)) [|
      logDebug("rules", "Main Floor Bath Fan Timer Expired - Turn Off")
      sendCommand(MainFloorBathFanSwitch, OFF)
      timerMainFloorBath.cancel
    ]
  } else {
    if(timerMainFloorBath !== null) {
      logDebug("rules","Main Floor Bath Fan Turned Off - Cancel Timer")
      timerMainFloorBath.cancel
    }
  }
end